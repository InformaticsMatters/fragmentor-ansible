---

# Commonly adjusted application variables -
# everything we expect the user to consider changing.
# To avoid clutter, put less-common variables in 'vars/main.yaml'

# The player's playbook to run.
fp_play: SetMe

# The user's kubernetes configuration file.
# The user must set KUBECONFIG - we do not assume ~/.kube/config
fp_kubeconfig_file: "{{ lookup('env', 'KUBECONFIG') }}"

# The namespace that is expected to exist.
fp_namespace: fragmentor

# The name of the 'pgcopy' volume (that we can mount).
# It's also mounted into the database (at `/pgcopy`).
# This PVC must exist and must be of the type `ReadWriteMany`.
fp_pgcopy_pvc_name: pgcopy

# The 'work' volume.
# Shared with all the workflow containers that get launched.
fp_work_volume_storageclass: efs
fp_work_volume_size_g: 1

# Read the content of the parameters file.
# This will be injected into the fragmentor container.
fp_parameter_file: parameters.yaml

# Details of the fragmentation player container image
fp_image_registry: docker.io
fp_image_name: informaticsmatters/fragmentor-player
fp_image_tag: '1.0.0'

# All Image PUll Secret -------------------------------------------------------

# A pull-secret name.
# If you need a pull secret to pull the images you must create it
# in the fragmentor namespace and provide the name of it in this variable.
#
# This secret must apply to all images the fragmentor wil need.
all_image_preset_pullsecret_name: ''
